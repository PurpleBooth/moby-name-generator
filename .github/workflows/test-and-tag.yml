'on':
  push:
    branches:
      - '*'
  pull_request: null
jobs:
  test-windows:
    strategy:
      matrix:
        go-version: [1.12.x, 1.13.x]
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v1
      - run: make test-universal
  test:
    strategy:
      matrix:
        go-version: [1.12.x, 1.13.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v1
      - run: make test
  merge-and-push:
    if: contains( github.event.pull_request.labels.*.name, 'dependencies') || ( github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'Release v') )
    needs:
      - test-windows
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: '${{ secrets.COMMITTER_TOKEN }}'
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - id: get_previous_version
        run: echo ::set-output name=PREVIOUS_VERSION::$(git tag --sort=-creatordate | head -n 1)
        shell: bash
      - id: semvers
        uses: WyriHaximus/github-action-next-semvers@master
        with:
          version: '${{ steps.get_previous_version.outputs.PREVIOUS_VERSION }}'
      - run: mkdir -p ./version
      - if: "!contains(github.event.head_commit.message, 'BC BREAK') && !contains(github.event.head_commit.message, 'Signed-off-by: dependabot-preview[bot] <support@dependabot.com>')"
        run: echo "$VERSION" >./version/version
        env:
          VERSION: ${{ steps.semvers.outputs.v_minor }}
      - if: "contains(github.event.head_commit.message, 'Signed-off-by: dependabot-preview[bot] <support@dependabot.com>')"
        run: echo "$VERSION" >./version/version
        env:
          VERSION: ${{ steps.semvers.outputs.v_patch }}
      - run: echo "$VERSION" > ./version/version
        env:
          VERSION: ${{ steps.semvers.outputs.v_major }}
        if: "contains(github.event.head_commit.message, 'BC BREAK')"
      - shell: bash
        run: |
          git config user.name "GitHub"
          git config user.email "noreply@github.com"

          git fetch
      - shell: bash
        if: contains( github.event.pull_request.labels.*.name, 'dependencies')
        run: |
          git checkout master
          git merge --ff-only -
      - shell: bash
        run: |
          git pull --rebase
          git tag -a -m "Release $(cat ./version/version)" "$(cat ./version/version)"
          git push
          git push --tags
