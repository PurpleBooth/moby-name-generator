'on':
  push:
    branches:
      - '*'
  pull_request: null
jobs:
  test-windows:
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x]
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2.3.2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-go@v2.1.2
        with:
          go-version: ${{ matrix.go-version }}
      - run: make test-universal
  test:
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2.3.2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/setup-go@v2.1.2
        with:
          go-version: ${{ matrix.go-version }}
      - run: make test
  merge-and-push:
    if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]' || ( github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'Release v') )
    needs:
      - test-windows
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.2
        with:
          token: '${{ secrets.COMMITTER_TOKEN }}'
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - id: get_previous_version
        run: echo ::set-output name=PREVIOUS_VERSION::$(git tag --sort=-creatordate | head -n 1)
        shell: bash
      - id: semvers
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
          version: '${{ steps.get_previous_version.outputs.PREVIOUS_VERSION }}'
      - run: mkdir -p ./version
      - if: "!contains(github.event.head_commit.message, 'BC BREAK') && !contains(github.event.head_commit.message, 'Signed-off-by: dependabot-preview[bot] <support@dependabot.com>')"
        run: echo "$VERSION" >./version/version
        env:
          VERSION: ${{ steps.semvers.outputs.v_minor }}
      - if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
        run: echo "$VERSION" >./version/version
        env:
          VERSION: ${{ steps.semvers.outputs.v_patch }}
      - run: echo "$VERSION" > ./version/version
        env:
          VERSION: ${{ steps.semvers.outputs.v_major }}
        if: "contains(github.event.head_commit.message, 'BC BREAK')"

      - shell: bash
        run: |
          git config user.name "GitHub"
          git config user.email "noreply@github.com"
          git tag -a -m "Release $(cat ./version/version)" "$(cat ./version/version)"
          git push --tags
